name: GBURODsite Workflow

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**/README.md'

jobs:

  tests:
    name: PEP8 check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip 
          pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
          cd gburod/
          pip install -r requirements.txt
      - name: Test with flake8
        run: |
          python -m flake8

  build_and_push_backend_to_docker_hub:
    name: Pushing backend image to Docker Hub
    runs-on: ubuntu-latest
    needs:
      - tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: ./gburod
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/gburod:latest

  deploy:
    name: Deploying on remote server
    runs-on: ubuntu-latest
    needs:
      - tests
      - build_and_push_backend_to_docker_hub
    steps:
      - name: Executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            sudo rm -f .env
            sudo touch .env
            sudo chmod 666 .env
            
            sudo echo DJANGO_KEY=${{ secrets.DJANGO_KEY }} >> .env
            sudo echo DEBUG_STATUS=${{ secrets.DEBUG_STATUS }} >> .env
            sudo echo ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }} >> .env
            sudo echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
            sudo echo DB_NAME=${{ secrets.DB_NAME }} >> .env
            sudo echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            sudo echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            sudo echo DB_HOST=${{ secrets.DB_HOST }} >> .env
            sudo echo DB_PORT=${{ secrets.DB_PORT }} >> .env
            sudo echo GOOGLE_RECAPTCHA_SECRET_KEY=${{ secrets.GOOGLE_RECAPTCHA_SECRET_KEY }} >> .env
            
            sudo docker-compose stop
            sudo docker-compose rm backend
            sudo docker-compose pull backend
            sudo docker-compose up -d --build
            sudo docker image prune -a

  send_message:
    name: Sending Telegram message
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Send message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: ${{ github.workflow }} успешно выполнен!
